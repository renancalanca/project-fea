{"version":3,"sources":["webpack:///./node_modules/tesseract.js/src/browser/index.js","webpack:///./node_modules/tesseract.js/src/common/circularize.js","webpack:///./node_modules/tesseract.js/src/common/job.js","webpack:///./node_modules/tesseract.js/src/index.js","webpack:///./src/app/etiqueta/etiqueta.module.ts","webpack:///./src/app/etiqueta/etiqueta.page.html","webpack:///./src/app/etiqueta/etiqueta.page.scss","webpack:///./src/app/etiqueta/etiqueta.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD,kBAAkB,mBAAO,CAAC,oEAAoB;AAC9C;AACA;;AAEA;;;AAGA;AACA;AACA,gFAAgF;AAChF;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,+BAA+B,SAAS;AACxC;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,gCAAgC,SAAS,G;;AAEzC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,2BAA2B,SAAS,G;AACpC;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;;;;;;;;;;;ACxGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA,C;;;;;;;;;;;AC9DA,gBAAgB,mBAAO,CAAC,0EAAkB;;AAE1C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oB;AACA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","file":"etiqueta-etiqueta-module.js","sourcesContent":["var defaultOptions = {\n    // workerPath: 'https://cdn.jsdelivr.net/gh/naptha/tesseract.js@0.2.0/dist/worker.js',\n    corePath: 'https://cdn.jsdelivr.net/gh/naptha/tesseract.js-core@0.1.0/index.js',    \n    langPath: 'https://tessdata.projectnaptha.com/3.02/',\n}\n\nif (process.env.TESS_ENV === \"development\") {\n    console.debug('Using Development Configuration')\n    defaultOptions.workerPath = location.protocol + '//' + location.host + '/dist/worker.dev.js?nocache=' + Math.random().toString(36).slice(3)\n}else{\n    var version = require('../../package.json').version;\n    defaultOptions.workerPath = 'https://cdn.jsdelivr.net/gh/naptha/tesseract.js@' + version + '/dist/worker.js'\n}\n\nexports.defaultOptions = defaultOptions;\n\n\nexports.spawnWorker = function spawnWorker(instance, workerOptions){\n    if(Blob && URL){\n        var blob = new Blob(['importScripts(\"' + workerOptions.workerPath + '\");'], {\n            type: 'application/javascript'\n        });\n        var worker = new Worker(URL.createObjectURL(blob));\n    }else{\n        var worker = new Worker(workerOptions.workerPath)\n    }\n\n    worker.onmessage = function(e){\n        var packet = e.data;\n        instance._recv(packet)\n    }\n    return worker\n}\n\nexports.terminateWorker = function(instance){\n    instance.worker.terminate()\n}\n\nexports.sendPacket = function sendPacket(instance, packet){\n    loadImage(packet.payload.image, function(img){\n        packet.payload.image = img\n        instance.worker.postMessage(packet) \n    })\n}\n\n\nfunction loadImage(image, cb){\n    if(typeof image === 'string'){\n        if(/^\\#/.test(image)){\n            // element css selector\n            return loadImage(document.querySelector(image), cb)\n        }else if(/(blob|data)\\:/.test(image)){\n            // data url\n            var im = new Image\n            im.src = image;\n            im.onload = e => loadImage(im, cb);\n            im.onerror = e => { throw e; };\n            return\n        }else{\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', image, true)\n            xhr.responseType = \"blob\";\n            \n            xhr.onload = e => {\n                if (xhr.status >= 400){\n                  throw new Error('Fail to get image as Blob');\n                }else{\n                    loadImage(xhr.response, cb);\n                }\n            };\n            xhr.onerror = e => { throw e; }; \n            \n            xhr.send(null)\n            return\n        }\n    }else if(image instanceof File){\n        // files\n        var fr = new FileReader()\n        fr.onload = e => loadImage(fr.result, cb);\n        fr.onerror = e => { throw e; }; \n        fr.readAsDataURL(image)\n        return\n    }else if(image instanceof Blob){\n        return loadImage(URL.createObjectURL(image), cb)\n    }else if(image.getContext){\n        // canvas element\n        return loadImage(image.getContext('2d'), cb)\n    }else if(image.tagName == \"IMG\" || image.tagName == \"VIDEO\"){\n        // image element or video element\n        var c = document.createElement('canvas');\n        c.width  = image.naturalWidth  || image.videoWidth;\n        c.height = image.naturalHeight || image.videoHeight;\n        var ctx = c.getContext('2d');\n        ctx.drawImage(image, 0, 0);\n        return loadImage(ctx, cb)\n    }else if(image.getImageData){\n        // canvas context\n        var data = image.getImageData(0, 0, image.canvas.width, image.canvas.height);\n        return loadImage(data, cb)\n    }else{\n        return cb(image)\n    }\n    throw new Error('Missing return in loadImage cascade')\n\n}\n","// The result of dump.js is a big JSON tree\n// which can be easily serialized (for instance\n// to be sent from a webworker to the main app\n// or through Node's IPC), but we want\n// a (circular) DOM-like interface for walking\n// through the data. \n\nmodule.exports = function circularize(page){\n    page.paragraphs = []\n    page.lines = []\n    page.words = []\n    page.symbols = []\n\n    page.blocks.forEach(function(block){\n        block.page = page;\n\n        block.lines = []\n        block.words = []\n        block.symbols = []\n\n        block.paragraphs.forEach(function(para){\n            para.block = block;\n            para.page = page;\n\n            para.words = []\n            para.symbols = []\n            \n            para.lines.forEach(function(line){\n                line.paragraph = para;\n                line.block = block;\n                line.page = page;\n\n                line.symbols = []\n\n                line.words.forEach(function(word){\n                    word.line = line;\n                    word.paragraph = para;\n                    word.block = block;\n                    word.page = page;\n                    word.symbols.forEach(function(sym){\n                        sym.word = word;\n                        sym.line = line;\n                        sym.paragraph = para;\n                        sym.block = block;\n                        sym.page = page;\n                        \n                        sym.line.symbols.push(sym)\n                        sym.paragraph.symbols.push(sym)\n                        sym.block.symbols.push(sym)\n                        sym.page.symbols.push(sym)\n                    })\n                    word.paragraph.words.push(word)\n                    word.block.words.push(word)\n                    word.page.words.push(word)\n                })\n                line.block.lines.push(line)\n                line.page.lines.push(line)\n            })\n            para.page.paragraphs.push(para)\n        })\n    })\n    return page\n}","const adapter = require('../node/index.js')\n\nlet jobCounter = 0;\n\nmodule.exports = class TesseractJob {\n    constructor(instance){\n        this.id = 'Job-' + (++jobCounter) + '-' + Math.random().toString(16).slice(3, 8)\n\n        this._instance = instance;\n        this._resolve = []\n        this._reject = []\n        this._progress = []\n        this._finally = []\n    }\n\n    then(resolve, reject){\n        if(this._resolve.push){\n            this._resolve.push(resolve) \n        }else{\n            resolve(this._resolve)\n        }\n\n        if(reject) this.catch(reject);\n        return this;\n    }\n    catch(reject){\n        if(this._reject.push){\n            this._reject.push(reject) \n        }else{\n            reject(this._reject)\n        }\n        return this;\n    }\n    progress(fn){\n        this._progress.push(fn)\n        return this;\n    }\n    finally(fn) {\n        this._finally.push(fn)\n        return this;  \n    }\n    _send(action, payload){\n        adapter.sendPacket(this._instance, {\n            jobId: this.id,\n            action: action,\n            payload: payload\n        })\n    }\n\n    _handle(packet){\n        var data = packet.data;\n        let runFinallyCbs = false;\n\n        if(packet.status === 'resolve'){\n            if(this._resolve.length === 0) console.log(data);\n            this._resolve.forEach(fn => {\n                var ret = fn(data);\n                if(ret && typeof ret.then == 'function'){\n                    console.warn('TesseractJob instances do not chain like ES6 Promises. To convert it into a real promise, use Promise.resolve.')\n                }\n            })\n            this._resolve = data;\n            this._instance._dequeue()\n            runFinallyCbs = true;\n        }else if(packet.status === 'reject'){\n            if(this._reject.length === 0) console.error(data);\n            this._reject.forEach(fn => fn(data))\n            this._reject = data;\n            this._instance._dequeue()\n            runFinallyCbs = true;\n        }else if(packet.status === 'progress'){\n            this._progress.forEach(fn => fn(data))\n        }else{\n            console.warn('Message type unknown', packet.status)\n        }\n\n        if (runFinallyCbs) {\n            this._finally.forEach(fn => fn(data));\n        }\n    }\n}\n","const adapter = require('./node/index.js')\nconst circularize = require('./common/circularize.js')\nconst TesseractJob = require('./common/job');\nconst version = require('../package.json').version;\n\nconst create = function(workerOptions = {}){\n\tvar worker = new TesseractWorker(Object.assign({}, adapter.defaultOptions, workerOptions));\n\tworker.create = create;\n\tworker.version = version;\n\treturn worker;\n}\n\nclass TesseractWorker {\n\tconstructor(workerOptions){\n\t\tthis.worker = null;\n\t\tthis.workerOptions = workerOptions;\n\t\tthis._currentJob = null;\n\t\tthis._queue = [];\n\t}\n\n\trecognize(image, options = {}){\n\t\treturn this._delay(job => {\n\t\t\tif (typeof options === 'string') options = {lang: options}\n\t\t\toptions.lang = options.lang || 'eng';\n\n\t\t\tjob._send('recognize', { image, options, workerOptions: this.workerOptions });\n\t\t})\n\t}\n\tdetect(image, options = {}){\n\t\treturn this._delay(job => {\n\t\t\tjob._send('detect', { image, options, workerOptions: this.workerOptions });\n\t\t})\n\t}\n\n\tterminate(){\n\t\tif(this.worker) adapter.terminateWorker(this);\n\t\tthis.worker = null;\n\t\tthis._currentJob = null;\n\t\tthis._queue = [];\n\t}\n\n\t_delay(fn){\n\t\tif(!this.worker) this.worker = adapter.spawnWorker(this, this.workerOptions);\n\n\t\tvar job = new TesseractJob(this);\n\t\tthis._queue.push(e => {\n\t\t\tthis._queue.shift();\n\t\t\tthis._currentJob = job;\n\t\t\tfn(job);\n\t\t});\n\t\tif(!this._currentJob) this._dequeue();\n\t\treturn job;\n\t}\n\n\t_dequeue(){\n\t\tthis._currentJob = null;\n\t\tif(this._queue.length){\n\t\t\tthis._queue[0]();\n\t\t}\n\t}\n\n\t_recv(packet){\n        if(packet.status === 'resolve' && packet.action === 'recognize'){\n            packet.data = circularize(packet.data);\n        }\n\n\t\tif(this._currentJob.id === packet.jobId){\n\t\t\tthis._currentJob._handle(packet)\n\t\t} else {\n\t\t\tconsole.warn('Job ID ' + packet.jobId + ' not known.')\n\t\t}\n\t}\n}\n\nmodule.exports = create();\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EtiquetaPage } from './etiqueta.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EtiquetaPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [EtiquetaPage]\n})\nexport class EtiquetaPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Etiqueta</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-button (click)=\\\"selectSource()\\\">Select Image</ion-button>\\n  <ion-button (click)=\\\"recognizeImage()\\\">Recognize Image</ion-button>\\n\\n  <img [src]=\\\"selectedImage\\\" *ngIf=\\\"selectedImage\\\">\\n\\n  <ion-card *ngIf=\\\"imageText\\\">\\n    <ion-card-header>\\n      Image Text\\n    </ion-card-header>\\n    <ion-card-content>\\n      {{imageText}}\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V0aXF1ZXRhL2V0aXF1ZXRhLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Camera, PictureSourceType } from '@ionic-native/camera/ngx'\nimport { ActionSheetController } from '@ionic/angular';\nimport * as Tesseract from 'tesseract.js'\n@Component({\n  selector: 'app-etiqueta',\n  templateUrl: './etiqueta.page.html',\n  styleUrls: ['./etiqueta.page.scss'],\n})\nexport class EtiquetaPage implements OnInit {\n\n  selectedImage: string;\n  imageText: string;\n\n  constructor(private camera: Camera, private actionSheetCtrl: ActionSheetController) { }\n\n  ngOnInit() {\n  }\n\n  async selectSource() {\n    let actionSheet = await this.actionSheetCtrl.create({\n      buttons: [\n        {\n          text: 'Use library',\n          handler: () => {\n            console.log('use library');\n            this.getPicture(this.camera.PictureSourceType.PHOTOLIBRARY);\n          }\n        }, {\n          text: 'Capture Image',\n          handler: () => {\n            this.getPicture(this.camera.PictureSourceType.CAMERA);\n          }\n        }, {\n          text: 'Cancel',\n          role: 'cancel'\n        }\n      ]\n    });\n    await actionSheet.present();\n  }\n\n  getPicture(sourceType: PictureSourceType) {\n    this.camera.getPicture({\n      quality: 100,\n      destinationType: this.camera.DestinationType.DATA_URL,\n      sourceType: sourceType,\n      allowEdit: true,\n      saveToPhotoAlbum: false,\n      correctOrientation: true\n    }).then((imageData) => {\n      //this.selectedImage = 'data:image/jpeg;base64,${imageData}';\n      let base64image = 'data:image/jpeg;base64,' + imageData;\n      this.selectedImage = base64image;\n    });\n\n  }\n\n  recognizeImage() {\n    // Tesseract.recognize(this.selectedImage)\n    //https://soudealgodao.com.br/new-site/wp-content/uploads/2017/01/Etiqueta-1.jpg\n    //https://tesseract.projectnaptha.com/img/eng_bw.png\n    Tesseract.recognize(this.selectedImage)\n      .progress(message => {\n        // if (message.status === 'recognizing text')\n        // this.progress.set(message.progress);\n        console.log('progress', message);\n      })\n      .catch(err => console.error(err))\n      .then(result => {\n        this.imageText = result.text;\n        console.log(result.text);\n      })\n      .finally(resultOrError => {\n        // this.progress.complete();\n      });\n  }\n\n}\n"],"sourceRoot":""}