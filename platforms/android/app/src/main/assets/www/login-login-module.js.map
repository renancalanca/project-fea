{"version":3,"sources":["webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login.page.html","webpack:///./src/app/login/login.page.scss","webpack:///./src/app/login/login.page.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>{{ isLogin ? 'Login' : 'Cadastrar' }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\">\\n    <ion-card>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Email</ion-label>\\n        <ion-input id=\\\"txtEmail\\\" ngModel name=\\\"email\\\" required email #emailCtrl=\\\"ngModel\\\">\\n        </ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-item *ngIf=\\\"!emailCtrl.valid && emailCtrl.touched\\\" lines=\\\"none\\\">\\n          <ion-label>\\n            Email inv√°lido.\\n          </ion-label>\\n        </ion-item>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\"> Senha </ion-label>\\n        <ion-input type=\\\"password\\\" ngModel name=\\\"senha\\\" required minlength=\\\"6\\\" #passwordCtrl=\\\"ngModel\\\" id=\\\"txtSenha\\\">\\n        </ion-input>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"!passwordCtrl.valid && passwordCtrl.touched \\\" lines=\\\"none\\\">\\n        <ion-label>\\n          Senha deve conter pelo menos 6 caracteres.\\n        </ion-label>\\n      </ion-item>\\n      <ion-button type=\\\"button\\\" color=\\\"primary\\\" fill=\\\"clear\\\" expand=\\\"block\\\" (click)=\\\"onSwitchAuthMode()\\\">\\n        {{ isLogin ? 'Cadastrar' : 'Login' }}\\n      </ion-button>\\n      <ion-button type=\\\"submit\\\" color=\\\"primary\\\" expand=\\\"block\\\" [disabled]=\\\"!f.valid\\\">\\n        {{ isLogin ? 'Login' : 'Cadastrar' }}\\n      </ion-button>\\n    </ion-card>\\n  </form>\\n</ion-content>\"","module.exports = \"#ion-header {\\n  background-color: var(--ion-color-primary); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vQzpcXEZhY3VsZGFkZVxcVENDXFxwcm9qZWN0LWZlYS9zcmNcXGFwcFxcbG9naW5cXGxvZ2luLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLDBDQUEwQyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI2lvbi1oZWFkZXJ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSk7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { LoginService, AuthResponseData } from './login.service';\nimport { NgForm } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { LoadingController, AlertController } from '@ionic/angular';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  isLoading = false;\n  isLogin = true;\n\n  constructor(private loginService: LoginService, private loadingCtrl: LoadingController, private router: Router, private alertCtrl: AlertController) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(form: NgForm) {\n    if (!form.valid) {\n      return;\n    }\n    const email = form.value.email;\n    const password = form.value.senha;\n\n    this.authenticate(email, password);\n\n    // console.log(email);\n    // console.log(password);\n\n    form.reset();\n  }\n\n  onSwitchAuthMode() {\n    this.isLogin = !this.isLogin;\n  }\n\n  authenticate(email: string, password: string) {\n    this.isLoading = true;\n    this.loadingCtrl\n      .create({ keyboardClose: true, message: 'Logging in...' })\n      .then(loadingEl => {\n        loadingEl.present();\n        let authObs: Observable<AuthResponseData>;\n        if (this.isLogin) {\n          authObs = this.loginService.login(email, password);\n        } else {\n          authObs = this.loginService.signup(email, password);\n        }\n        authObs.subscribe(\n          resData => {\n            console.log(resData);\n            this.isLoading = false;\n            loadingEl.dismiss();\n            this.router.navigateByUrl('/etiqueta');\n          },\n          errRes => {\n            loadingEl.dismiss();\n            const code = errRes.error.error.message;\n            let message = 'Could not sign you up, please try again.';\n            if (code === 'EMAIL_EXISTS') {\n              message = 'This email address exists already!';\n            } else if (code === 'EMAIL_NOT_FOUND') {\n              message = 'E-Mail address could not be found.';\n            } else if (code === 'INVALID_PASSWORD') {\n              message = 'This password is not correct.';\n            }\n            this.showAlert(message);\n          }\n        );\n      });\n  }\n\n  private showAlert(message: string) {\n    this.alertCtrl\n      .create({\n        header: 'Authentication failed',\n        message: message,\n        buttons: ['Okay']\n      })\n      .then(alertEl => alertEl.present());\n  }\n\n  // loginWithGoogle() {\n  //   this.loginService.signInWithGoogle()\n  //     .then(\n  //       () => this.router.navigateByUrl('/etiqueta'),\n  //       error => console.log(error.message)\n  //     );\n  // }\n}"],"sourceRoot":""}